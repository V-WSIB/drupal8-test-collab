<?php

/**
 * @file
 * Contains hooks for WSIB Layouts Module.
 */

use Drupal\block\Entity\Block;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Url;

/**
 * Implements hook_theme_suggestions_alter().
 */
function wsib_layouts_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($variables['theme_hook_original'] == 'region' && isset($variables['elements']['#region']) && $variables['elements']['#region'] == 'content') {
    $node_current = \Drupal::routeMatch()->getParameter('node');
    if (isset($node_current) && is_object($node_current) && $node_current->bundle() == 'base_template') {
      $suggestions[] = 'region__' . $variables['elements']['#region'] . '__' . $node_current->bundle();
      $suggestions[] = 'region__' . $variables['elements']['#region'] . '__' . $node_current->bundle() . '__' . $node_current->id();
    }
  }
  if ($variables['theme_hook_original'] == 'html') {
    $node_current = \Drupal::routeMatch()->getParameter('node');
    if (isset($node_current) && is_object($node_current) && $node_current->bundle() == 'blank_template') {
      $suggestions[] = 'html__' . $node_current->bundle();
      $suggestions[] = 'html__' . $node_current->bundle() . '__' . $node_current->id();
    }
  }
  if ($variables['theme_hook_original'] === 'block'
    && isset($variables['elements']['content']['#block_content'])
    && $variables['elements']['content']['#block_content']->bundle() === 'banner') {
    array_unshift($suggestions, 'block__banner');
  }
  if ($variables['theme_hook_original'] === 'views_view_unformatted' && $variables['view']->id() === 'front_page_link_collections') {
    $suggestions[] = 'views_view_unformatted__link_collection';
  }
}

/**
 * Implements hook_preprocess_region().
 */
function wsib_layouts_preprocess_region(&$variables) {
  if (isset($variables['elements']['#region']) && $variables['elements']['#region'] == 'content') {
    $node_current = \Drupal::routeMatch()->getParameter('node');
    if (isset($node_current) && is_object($node_current) && $node_current->bundle() == 'base_template') {
      $blocks = \Drupal::entityTypeManager()
        ->getStorage('block')
        ->loadByProperties(['theme' => 'de_theme', 'region' => 'content']);
      uasort($blocks, 'Drupal\block\Entity\Block::sort');
      $build = [];
      foreach ($blocks as $key => $block) {
        if ($block->access('view')) {
          $block = Block::load($key);
          $block_content = \Drupal::entityTypeManager()
            ->getViewBuilder('block')
            ->view($block);
          $build[$key] = $block_content;
        }
      }
      $variables['build'] = $build;
    }
  }
}

/**
 * Implements hook_preprocess_block().
 */
function wsib_layouts_preprocess_block(&$variables) {
  if ($variables['elements']['#id'] === 'frontpagebanner') {
    $variables['#attached']['library'][] = 'wsib_layouts/blazy_init';
    $variables['#attached']['library'][] = 'wsib_layouts/image_randomizer';
    $block_content = $variables['content']['#block_content'];
    $media_items = $block_content->get('field_main_image')->getValue();
    $media_id = array_column($media_items, 'target_id');
    $url = array();
    foreach($media_id as $id) {
      $media = \Drupal::entityTypeManager()->getStorage('media')->load($id);
      $fid = $media->get('field_media_image')->target_id;
      $file = File::load($fid);
      $uri = $file->getFileUri();
      $url[] = file_create_url($uri);
    }
    $variables['#attached']['drupalSettings']['media_items'] = $url;
  }
}

/**
 * Implements hook_theme().
 */
function wsib_layouts_theme() {
  return [
    'background_image_formatter' => [
      'variables' => ['url' => NULL,],
    ],
  ];
}
